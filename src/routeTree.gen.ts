/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root';
import { Route as RssDotxmlRouteImport } from './routes/rss[.]xml';
import { Route as FeedDotjsonRouteImport } from './routes/feed[.]json';
import { Route as AtomDotxmlRouteImport } from './routes/atom[.]xml';
import { Route as IndexRouteImport } from './routes/index';
import { Route as BlogIndexRouteImport } from './routes/blog/index';
import { Route as BlogSlugRouteImport } from './routes/blog/$slug';
import { Route as ApiGithubContributionsRouteImport } from './routes/api/github-contributions';

const RssDotxmlRoute = RssDotxmlRouteImport.update({
  id: '/rss.xml',
  path: '/rss.xml',
  getParentRoute: () => rootRouteImport,
} as any);
const FeedDotjsonRoute = FeedDotjsonRouteImport.update({
  id: '/feed.json',
  path: '/feed.json',
  getParentRoute: () => rootRouteImport,
} as any);
const AtomDotxmlRoute = AtomDotxmlRouteImport.update({
  id: '/atom.xml',
  path: '/atom.xml',
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any);
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRouteImport,
} as any);
const BlogSlugRoute = BlogSlugRouteImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => rootRouteImport,
} as any);
const ApiGithubContributionsRoute = ApiGithubContributionsRouteImport.update({
  id: '/api/github-contributions',
  path: '/api/github-contributions',
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/atom.xml': typeof AtomDotxmlRoute;
  '/feed.json': typeof FeedDotjsonRoute;
  '/rss.xml': typeof RssDotxmlRoute;
  '/api/github-contributions': typeof ApiGithubContributionsRoute;
  '/blog/$slug': typeof BlogSlugRoute;
  '/blog': typeof BlogIndexRoute;
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/atom.xml': typeof AtomDotxmlRoute;
  '/feed.json': typeof FeedDotjsonRoute;
  '/rss.xml': typeof RssDotxmlRoute;
  '/api/github-contributions': typeof ApiGithubContributionsRoute;
  '/blog/$slug': typeof BlogSlugRoute;
  '/blog': typeof BlogIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/': typeof IndexRoute;
  '/atom.xml': typeof AtomDotxmlRoute;
  '/feed.json': typeof FeedDotjsonRoute;
  '/rss.xml': typeof RssDotxmlRoute;
  '/api/github-contributions': typeof ApiGithubContributionsRoute;
  '/blog/$slug': typeof BlogSlugRoute;
  '/blog/': typeof BlogIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/atom.xml'
    | '/feed.json'
    | '/rss.xml'
    | '/api/github-contributions'
    | '/blog/$slug'
    | '/blog';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/atom.xml'
    | '/feed.json'
    | '/rss.xml'
    | '/api/github-contributions'
    | '/blog/$slug'
    | '/blog';
  id:
    | '__root__'
    | '/'
    | '/atom.xml'
    | '/feed.json'
    | '/rss.xml'
    | '/api/github-contributions'
    | '/blog/$slug'
    | '/blog/';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AtomDotxmlRoute: typeof AtomDotxmlRoute;
  FeedDotjsonRoute: typeof FeedDotjsonRoute;
  RssDotxmlRoute: typeof RssDotxmlRoute;
  ApiGithubContributionsRoute: typeof ApiGithubContributionsRoute;
  BlogSlugRoute: typeof BlogSlugRoute;
  BlogIndexRoute: typeof BlogIndexRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/rss.xml': {
      id: '/rss.xml';
      path: '/rss.xml';
      fullPath: '/rss.xml';
      preLoaderRoute: typeof RssDotxmlRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/feed.json': {
      id: '/feed.json';
      path: '/feed.json';
      fullPath: '/feed.json';
      preLoaderRoute: typeof FeedDotjsonRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/atom.xml': {
      id: '/atom.xml';
      path: '/atom.xml';
      fullPath: '/atom.xml';
      preLoaderRoute: typeof AtomDotxmlRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/blog/': {
      id: '/blog/';
      path: '/blog';
      fullPath: '/blog';
      preLoaderRoute: typeof BlogIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/blog/$slug': {
      id: '/blog/$slug';
      path: '/blog/$slug';
      fullPath: '/blog/$slug';
      preLoaderRoute: typeof BlogSlugRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/api/github-contributions': {
      id: '/api/github-contributions';
      path: '/api/github-contributions';
      fullPath: '/api/github-contributions';
      preLoaderRoute: typeof ApiGithubContributionsRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AtomDotxmlRoute: AtomDotxmlRoute,
  FeedDotjsonRoute: FeedDotjsonRoute,
  RssDotxmlRoute: RssDotxmlRoute,
  ApiGithubContributionsRoute: ApiGithubContributionsRoute,
  BlogSlugRoute: BlogSlugRoute,
  BlogIndexRoute: BlogIndexRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

import type { getRouter } from './router.tsx';
import type { createStart } from '@tanstack/react-start';
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true;
    router: Awaited<ReturnType<typeof getRouter>>;
  }
}
